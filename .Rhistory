setwd("data")
q()
# Author: Eirik
# This is the script for cleaning the main data we got. There is some dis
getwd()
setwd("data")
setwd(dir)
View(secondDf)
{
mainDf <- as.data.frame(read.csv("pcos_cleaned.csv"))
secondDf <- as.data.frame(read.csv("nhanes_with_selection.csv"))
mainDf <- mainDf %>%
select(-Menstrual_Irregularity,
-Antral_Follicle_Count,
-Follicle_Less_Than_Average)
secondDf <- secondDf %>%
select(-Race, -Number_Of_Children_Under_18)
secondDf <- secondDf %>%
relocate(BMI, .after = Age) %>%
relocate(BMI_Over_Normal, .after = BMI)
mainDf$PCOS_Diagnosis <- ifelse(mainDf$PCOS_Diagnosis == 1, "Yes", "No")
View(mainDf)
View(secondDf)
}
getwd()
setwd("DAT3000/Eksamen")
{
mainDf <- as.data.frame(read.csv("pcos_cleaned.csv"))
secondDf <- as.data.frame(read.csv("nhanes_with_selection.csv"))
mainDf <- mainDf %>%
select(-Menstrual_Irregularity,
-Antral_Follicle_Count,
-Follicle_Less_Than_Average)
secondDf <- secondDf %>%
select(-Race, -Number_Of_Children_Under_18)
secondDf <- secondDf %>%
relocate(BMI, .after = Age) %>%
relocate(BMI_Over_Normal, .after = BMI)
mainDf$PCOS_Diagnosis <- ifelse(mainDf$PCOS_Diagnosis == 1, "Yes", "No")
View(mainDf)
View(secondDf)
}
library(dplyr)
library(haven)
{
mainDf <- as.data.frame(read.csv("pcos_cleaned.csv"))
secondDf <- as.data.frame(read.csv("nhanes_with_selection.csv"))
mainDf <- mainDf %>%
select(-Menstrual_Irregularity,
-Antral_Follicle_Count,
-Follicle_Less_Than_Average)
secondDf <- secondDf %>%
select(-Race, -Number_Of_Children_Under_18)
secondDf <- secondDf %>%
relocate(BMI, .after = Age) %>%
relocate(BMI_Over_Normal, .after = BMI)
mainDf$PCOS_Diagnosis <- ifelse(mainDf$PCOS_Diagnosis == 1, "Yes", "No")
View(mainDf)
View(secondDf)
}
{
newData$Number_Of_Children_Under_18 <- rowSums(newData[, c("DMDHHSZA", "DMDHHSZB")])
newData <- subset(newData, select=c(RIDAGEYR, RIDRETH3, Number_Of_Children_Under_18, LBXTST, Testosterone_Over_Normal, BMXBMI, BMI_Over_Normal))
newData <- newData %>%
rename(
Age = RIDAGEYR,
Race = RIDRETH3,
Testosterone_Level.ng.dL. = LBXTST,
BMI = BMXBMI
)
}
# cleaning and and creating our own subset for predictions using nhanes 2015/2016 (latest iteration that had testosterone in their exams)
{
library(haven)
bmi <- read_xpt("raw/BMX_I.xpt")
demography <- read_xpt("raw/DEMO_I.xpt")
hormones <- read_xpt("raw/TST_I.xpt")
newData <- demography %>%
inner_join(hormones, by = "SEQN") %>%
inner_join(bmi, by = "SEQN")
newData <- replace(newData, is.na(newData), 0)
newData <- subset(newData, RIAGENDR == 2)
newData <- subset(newData, RIDAGEYR <= 46)
newData <- subset(newData, RIDAGEYR >= 18)
newData$BMI_Over_Normal <- ifelse(newData$BMXBMI > 25, 1, 0)
newData$Testosterone_Over_Normal <- ifelse(newData$LBXTST > 70, 1, 0)
newData <- newData %>%
relocate(BMI_Over_Normal, .after = BMXBMI) %>%
relocate(Testosterone_Over_Normal, .after = LBXTST)
}
{
newData$Number_Of_Children_Under_18 <- rowSums(newData[, c("DMDHHSZA", "DMDHHSZB")])
newData <- subset(newData, select=c(RIDAGEYR, RIDRETH3, Number_Of_Children_Under_18, LBXTST, Testosterone_Over_Normal, BMXBMI, BMI_Over_Normal))
newData <- newData %>%
rename(
Age = RIDAGEYR,
Race = RIDRETH3,
Testosterone_Level.ng.dL. = LBXTST,
BMI = BMXBMI
)
}
View(newData)
mexicanAmerican_count <- rowsum(newData$Race, 1)
newData %>%
filter(status %in% newData) %>%
nrow()
newData %>%
filter(status %in% newData) %>%
nrow()
newData %>%
filter(Race %in% newData) %>%
nrow()
View(newData)
newData %>%
filter(Race %in% newData) %>%
count(Race, name = "RaceCount")
View(newData)
newData %>%
count(Race, name = "RaceCount")
View(newData)
raceCount <- newData %>%
count(Race, name = "RaceCount")
View(raceCount)
raceCount <- as.data.frame(t(raceCount))
View(raceCount)
colnames(raceCount) <- C("Mexican_American", "Other_Hispanic", "Caucasian", "Black", "Asian", "Other_Including_Multi_Racial")
# cleaning and and creating our own subset for predictions using nhanes 2015/2016 (latest iteration that had testosterone in their exams)
{
library(haven)
bmi <- read_xpt("raw/BMX_I.xpt")
demography <- read_xpt("raw/DEMO_I.xpt")
hormones <- read_xpt("raw/TST_I.xpt")
newData <- demography %>%
inner_join(hormones, by = "SEQN") %>%
inner_join(bmi, by = "SEQN")
newData <- replace(newData, is.na(newData), 0)
newData <- subset(newData, RIAGENDR == 2)
newData <- subset(newData, RIDAGEYR <= 46)
newData <- subset(newData, RIDAGEYR >= 18)
newData$BMI_Over_Normal <- ifelse(newData$BMXBMI > 25, 1, 0)
newData$Testosterone_Over_Normal <- ifelse(newData$LBXTST > 70, 1, 0)
newData <- newData %>%
relocate(BMI_Over_Normal, .after = BMXBMI) %>%
relocate(Testosterone_Over_Normal, .after = LBXTST)
}
{
newData$Number_Of_Children_Under_18 <- rowSums(newData[, c("DMDHHSZA", "DMDHHSZB")])
newData <- subset(newData, select=c(RIDAGEYR, RIDRETH3, Number_Of_Children_Under_18, LBXTST, Testosterone_Over_Normal, BMXBMI, BMI_Over_Normal))
newData <- newData %>%
rename(
Age = RIDAGEYR,
Race = RIDRETH3,
Testosterone_Level.ng.dL. = LBXTST,
BMI = BMXBMI
)
}
raceCount <- newData %>%
count(Race, name = "RaceCount")
View(raceCount)
raceCount <- as.data.frame(t(raceCount))
colnames(raceCount) <- C("Mexican_American", "Other_Hispanic", "Caucasian", "Black", "Asian", "Other_Including_Multi_Racial")
colnames(raceCount) <- c("Mexican_American", "Other_Hispanic", "Caucasian", "Black", "Asian", "Other_Including_Multi_Racial")
View(raceCount)
raceCount <- raceCount[-1, ]
View(raceCount)
raceCount <- as.data.frame(t(raceCount))
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
raceCount <- as.data.frame(t(raceCount))
colnames(raceCount) <- c("Mexican_American", "Other_Hispanic", "Caucasian", "Black", "Asian", "Other_Including_Multi_Racial")
raceCount <- as.data.frame(t(raceCount))
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
View(raceCount)
raceCount <- replace(raceCount$Race, 1, "Mexican_American")
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
View(raceCount)
raceCount <- replace(raceCount$Race, 1, "Mexican_American")
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
raceCount$Race == 1 <- "Mexican_American"
raceCount$Race = 1 <- "Mexican_American"
raceCount[raceCount$Race == 1] <- "Mexican_American"
raceCount <- newData %>%
count(Race, name = "RaceCount")
raceCount <- raceCount %>%
mutate(
Race = recode(
Race,
`1` = "Mexican_American",
`2` = "Other_Hispanic",
`3` = "Caucasian",
`4` = "Black",
`6` = "Asian",
`7` = "Other_Including_Multi_Racial"
)
)
View(raceCount)
raceCount <- newData %>%
group_by(Race) %>%
summarise(
RaceCount = n(),
Mean_BMI = mean(BMI, na.rm = TRUE),
SD_BMI = mean(BMI, na.rm = TRUE)
)
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
raceCount <- raceCount %>%
mutate(
Race = recode(
Race,
`1` = "Mexican_American",
`2` = "Other_Hispanic",
`3` = "Caucasian",
`4` = "Black",
`6` = "Asian",
`7` = "Other_Including_Multi_Racial"
)
)
raceCount <- newData %>%
group_by(Race) %>%
summarise(
RaceCount = n(),
Mean_BMI = mean(BMI, na.rm = TRUE),
SD_BMI = mean(BMI, na.rm = TRUE)
)
View(raceCount)
raceCount <- raceCount %>%
mutate(
Race = recode(
Race,
`1` = "Mexican_American",
`2` = "Other_Hispanic",
`3` = "Caucasian",
`4` = "Black",
`6` = "Asian",
`7` = "Other_Including_Multi_Racial"
)
)
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
raceCount <- newData %>%
group_by(Race) %>%
summarise(
RaceCount = n(),
Mean_BMI = mean(BMI, na.rm = TRUE),
SD_BMI = mean(BMI, na.rm = TRUE)
)
raceCount <- raceCount %>%
mutate(
Race = recode(
Race,
`1` = "Mexican_American",
`2` = "Other_Hispanic",
`3` = "Caucasian",
`4` = "Black",
`6` = "Asian",
`7` = "Other_Including_Multi_Racial"
)
)
View(raceCount)
raceCount <- newData %>%
count(Race, name = "RaceCount")
raceCount <- newData %>%
group_by(Race) %>%
summarise(
RaceCount = n(),
BMI_Mean = mean(BMI, na.rm = TRUE),
BMI_Standard_Deviation = mean(BMI, na.rm = TRUE),
Testosterone_Level_Mean.ng.dL = mean(Testosterone_Level.ng.dL., na.rm = TRUE),
Age_mean = mean(Age, na.rm = TRUE)
)
raceCount <- raceCount %>%
mutate(
Race = recode(
Race,
`1` = "Mexican_American",
`2` = "Other_Hispanic",
`3` = "Caucasian",
`4` = "Black",
`6` = "Asian",
`7` = "Other_Including_Multi_Racial"
)
)
View(raceCount)
# Cleaning the original dataset
# JEG LOVER Å KOMMENTERE OG DELE DETTE OPP SENERE, MEN JEG GIDDER IKKE NÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
{
library(dplyr)
df <- as.data.frame(read.csv("pcos_dataset.csv"))
df$BMI_Over_Normal <- ifelse(df$BMI > 25, 1, 0)
df$Testosterone_Over_Normal <- ifelse(df$Testosterone_Level.ng.dL. > 70, 1, 0)
df$Follicle_Less_Than_Average <- ifelse(df$Antral_Follicle_Count < 20, 1, 0)
df$PCOS_Diagnosis <- ifelse(df$PCOS_Diagnosis == 1, "Yes", "No")
df <- df %>%
relocate(BMI_Over_Normal, .after = BMI) %>%
relocate(Testosterone_Over_Normal, .after = Testosterone_Level.ng.dL.) %>%
relocate(Follicle_Less_Than_Average, .after = Antral_Follicle_Count)
View(df)
}
write.csv(df, paste0("pcos_cleaned.csv"), row.names = FALSE)
# Cleaning the original dataset
# JEG LOVER Å KOMMENTERE OG DELE DETTE OPP SENERE, MEN JEG GIDDER IKKE NÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
{
library(dplyr)
df <- as.data.frame(read.csv("pcos_dataset.csv"))
df$BMI_Over_Normal <- ifelse(df$BMI > 25, 1, 0)
df$Testosterone_Over_Normal <- ifelse(df$Testosterone_Level.ng.dL. > 70, 1, 0)
df$Follicle_Less_Than_Average <- ifelse(df$Antral_Follicle_Count < 20, 1, 0)
df <- df %>%
relocate(BMI_Over_Normal, .after = BMI) %>%
relocate(Testosterone_Over_Normal, .after = Testosterone_Level.ng.dL.) %>%
relocate(Follicle_Less_Than_Average, .after = Antral_Follicle_Count)
View(df)
}
write.csv(df, paste0("pcos_cleaned_nums.csv"), row.names = FALSE)
# cleaning and and creating our own subset for predictions using nhanes 2015/2016 (latest iteration that had testosterone in their exams)
{
library(haven)
bmi <- read_xpt("raw/BMX_I.xpt")
demography <- read_xpt("raw/DEMO_I.xpt")
hormones <- read_xpt("raw/TST_I.xpt")
menstrual <- read_xpt("raw/RHQ_I.xpt")
newData <- demography %>%
inner_join(hormones, by = "SEQN") %>%
inner_join(bmi, by = "SEQN") %>%
inner_join(menstrual, by = "SEQN")
newData <- replace(newData, is.na(newData), 0)
newData <- subset(newData, RIAGENDR == 2)
newData <- subset(newData, RIDAGEYR <= 46)
newData <- subset(newData, RIDAGEYR >= 18)
newData$BMI_Over_Normal <- ifelse(newData$BMXBMI > 25, 1, 0)
newData$Testosterone_Over_Normal <- ifelse(newData$LBXTST > 70, 1, 0)
newData <- newData %>%
relocate(BMI_Over_Normal, .after = BMXBMI) %>%
relocate(Testosterone_Over_Normal, .after = LBXTST)
}
write.csv(newData, paste0("nhanes_without_selection.csv"), row.names = FALSE)
newData$Number_Of_Children_Under_18 <- rowSums(newData[, c("DMDHHSZA", "DMDHHSZB")])
newData <- subset(newData, select=c(RIDAGEYR, RIDRETH3, Number_Of_Children_Under_18, LBXTST, Testosterone_Over_Normal, BMXBMI, BMI_Over_Normal, RHQ031))
newData <- newData %>%
rename(
Age = RIDAGEYR,
Race = RIDRETH3,
Testosterone_Level.ng.dL. = LBXTST,
BMI = BMXBMI,
Menstrual_Irregularity = RHQ031
)
newData$Menstrual_Irregularity <- ifelse(newData$Menstrual_Irregularity == 1, 1, 0)
View(newData)
# cleaning and and creating our own subset for predictions using nhanes 2015/2016 (latest iteration that had testosterone in their exams)
{
library(haven)
bmi <- read_xpt("raw/BMX_I.xpt")
demography <- read_xpt("raw/DEMO_I.xpt")
hormones <- read_xpt("raw/TST_I.xpt")
menstrual <- read_xpt("raw/RHQ_I.xpt")
newData <- demography %>%
inner_join(hormones, by = "SEQN") %>%
inner_join(bmi, by = "SEQN") %>%
inner_join(menstrual, by = "SEQN")
newData <- replace(newData, is.na(newData), 0)
newData <- subset(newData, RIAGENDR == 2)
newData <- subset(newData, RIDAGEYR <= 46)
newData <- subset(newData, RIDAGEYR >= 18)
newData$BMI_Over_Normal <- ifelse(newData$BMXBMI > 25, 1, 0)
newData$Testosterone_Over_Normal <- ifelse(newData$LBXTST > 70, 1, 0)
newData <- newData %>%
relocate(BMI_Over_Normal, .after = BMXBMI) %>%
relocate(Testosterone_Over_Normal, .after = LBXTST)
}
{
newData$Number_Of_Children_Under_18 <- rowSums(newData[, c("DMDHHSZA", "DMDHHSZB")])
newData <- subset(newData, select=c(RIDAGEYR, RIDRETH3, Number_Of_Children_Under_18, LBXTST, Testosterone_Over_Normal, BMXBMI, BMI_Over_Normal, RHQ031))
newData <- newData %>%
rename(
Age = RIDAGEYR,
Race = RIDRETH3,
Testosterone_Level.ng.dL. = LBXTST,
BMI = BMXBMI,
Menstrual_Irregularity = RHQ031
)
newData$Menstrual_Irregularity <- ifelse(newData$Menstrual_Irregularity == 1, 0, 1)
View(newData)
}
write.csv(newData, paste0("nhanes_with_selection.csv"), row.names = FALSE)
